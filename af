#!/bin/sh

set -o errexit
set -o nounset
set -o pipefail

build_name()
{
    echo docker-container-$1
}

build_rpm_name()
{
    echo $1-0-1.$(uname -i)
}

build_exports_path()
{
    local DockerId=$(docker inspect --format='{{.GraphDriver.Data.DeviceName}}' $1)
    local MntTarget=$(findmnt -n -r -o TARGET -S /dev/mapper/${DockerId})
    echo $MntTarget/rootfs/exports
}

build_db_name()
{
    echo /var/lib/af/$1.db
}

install()
{
    local Exports=$(build_exports_path ${1})
    local Name=$(build_name ${1})

    local TmpDir=$(mktemp -d /tmp/af.XXXXXX)
    local SpecFile=$TmpDir/$Name.spec

    tar -C $Exports -czf $TmpDir/hostfs.tar hostfs

    cat > $SpecFile <<EOF
Name:		$Name
Version:	0
Release:	1
Summary:	Files delivered by Docker container $1

License:	None
URL:		https://github.com/jfilak/af

%description
Files delivered by Docker container $1

%prep

%build

%install
rsync -avz $Exports/hostfs/ %{buildroot}

%files
EOF

    pushd $Exports/hostfs
    find -maxdepth 1 -mindepth 1 | sed "s/^\.//" >> $SpecFile
    popd

    cat >> $SpecFile <<EOF

%changelog
* $(date +"%a %b %d %Y") af <af@localhost> - 0-1
- Container import
EOF

    rpmbuild \
        --define "_sourcedir $TmpDir" \
        --define "_rpmdir $TmpDir" \
        --define "_specdir $TmpDir" \
        --define "_builddir $TmpDir" \
        --define "_srcrpmdir $TmpDir" \
        -ba $SpecFile

    local DBName=$(build_db_name $Name)
    pushd $Exports/hostfs
    find | while read f; do
        local File=$(echo $f | sed "s/^\.//")
        if [ ! -e $File ]; then
            mkdir -p /var/lib/af
            echo $File >> $DBName
        fi
    done
    popd

    rpm -ivh $TmpDir/$(uname -i)/$(build_rpm_name $Name).rpm || {
        rm -f $DBName
    }
}

uninstall()
{
    local Name=$(build_name ${1})
    local DBName=$(build_db_name $Name)
    rm -f $DBName
    rpm -e $(build_rpm_name $Name)
}

query()
{
    find /var/lib/af/ | while read f; do
        grep "^$1\$" -c $f && {
            echo $f | sed 's/^.*docker-container-\(.*\).db$/\1/'
            exit 0
        }
    done;
}

list()
{
    local Container=false
    if [ "$1" == "--container" ]; then
        Container=true
        shift
    fi

    if $Container; then
        local Exports=$(build_exports_path ${1})
        ( cd $Exports/hostfs;
          find . -mindepth 1 | sed "s/^\.//" )
    else
        local Name=$(build_name ${1})
        local DBName=$(build_db_name $Name)
        test -e $DBName || {
            echo "Docker container $1 not installed"
            exit 1
        }

        cat /var/lib/af/$Name.db
    fi
}

cmd=$1
shift
case $cmd in
    install)
        install $1
        ;;
    query)
        query $1
        ;;
    list)
        list $@
        ;;
    uninstall)
        uninstall $1
        ;;
        *)
        cat <<EOF
Usage:
    $0 install [DOCKER_CONTAINER]

    $0 uninstall [DOCKER_CONTAINER]

    $0 list [DOCKER_CONTAINER]

    $0 query [FILE]
EOF
        ;;
esac
